noeud* parc=n->racine;
    assert(parc!=NULL);
    liste_noeud* save = n->fils;
    
    if(save!=NULL && save->no != NULL && strcmp(save->no->nom,"")!=0){
       //&& save->no->pere != NULL && save->no->racine != NULL){
        if(strcmp(parc->nom,parc->pere->nom)==0){
            printf("Noeud %s , %d fils: ",parc->nom,nbFils(parc));
            liste_noeud* pFils=parc->fils;
            while(pFils!=NULL){
                    printf(" %s",pFils->no->nom);
                    if(pFils->no->est_dossier){
                        printf("\033[31m(D)| \033[0m");
                    }
                    else{
                        printf("\033[32m(F)| \033[0m");
                    }
            pFils=pFils->succ;
            }
        printf("\n");
        }
        else{
            printf("Noeud %s,  pere: %s , %d fils: ",parc->nom,parc->pere->nom,nbFils(parc));
            liste_noeud* pFils=parc->fils;
            
            while(pFils!=NULL){
                printf(" %s ",pFils->no->nom);
                if(pFils->no !=NULL){
                    if(pFils->no->est_dossier==true){
                        printf("\033[31m(D)| \033[0m");
                    }
                    else{
                        printf("\033[32m(F)| \033[0m");
                    }
                }
            pFils=pFils->succ;
            }   
        printf("\n");
        }
        // Parcour recursif de nos éléments
        while(save!=NULL){
            print(save->no);
            save=save->succ;
        }
    }
    else{
        if(DEBUG)printf("fils null \n");
        if(strcmp(n->nom,n->pere->nom)==0){
            printf("Noeud: %s ", n->nom);
            if(n->est_dossier==true){
                printf("\033[31m(D)|\033[0m 0 fils\n");
            }
            else{
                printf("\033[32m (F)|\033[0m 0 fils\n");
            }
        }
        else{
            printf("Noeud : %s ", n->nom);
            if(n->est_dossier==true){
                printf("\033[31m(D)|\033[0m père : %s , 0 fils \n", n->pere->nom);
            } 
            else{
                printf("\033[31m(F)|\033[0m père: %s , 0 fils \n",n->pere->nom);
            }
        }
    }